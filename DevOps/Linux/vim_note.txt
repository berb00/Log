#、vim基本使用

vim编辑器有两种操作模式:
    Normal Mode             普通模式
    Insert Mode             插入模式
    Visual Mode             视图模式
    Select mode             选择模式
    Command line mode       命令行模式
    Ex mode                 Ex模式





                    i,a,o,r,s
Normal Mode ----------->--------------  Insert Mode
    ||      -----------<--------------
    ||                 Esc
    ||
v   ↓↑  Esc
V   ||
    ||
Visual Mode




    视图模式
        1、按键解释成命令
        2、进入插入模式              Append，Insert，Replace，Subsitute
            i                       在光标所在行位置停止不动开始写入内容
            I                       在光标所在行行首开始写入内容
            a                       在光标所在行当前字符后开始写入内容
            A                       在光标所在行行尾开始写入内容
            o                       在光标所在行下一行开始写入内容
            O                       在光标所在行上一行开始写入内容
            s                       删除当前光标所在位置的单词并插入
            S 
        x:                          删除当前光标所在位置的字符
        dd:                         删除当前光标所在行
        dw:                         删除当前光标所在位置的单词
        d$:                         删除当前光标所在位置至行尾的内容
        J:                          删除当前光标所在行行尾的换行符（拼接行）
        u:                          撤销前一编辑命令
        a:                          在当前光标后追加数据
        A:                          在当前光标所在行行尾追加数据
        r char:                     用char替换当前光标所在位置的单个字符
        R text:                     用text覆盖当前光标所在位置的数据，直到按下ESC键
        u                           撤销最近的修改
        U                           撤销对当前行上做的所有修改
        r                           替换光标位置上的一个字符
        R                           替换从光标位置开始的字符，同时改变vi到文本输入模式
        .                           重复上一次的修改


        有些编辑命令允许使用数字修饰符来指定重复该命令多少次
        2x会删除从光标当前位置开始的两个字符
        5dd会删除从光标当前所在行开始的5行。
        
        把删除键（Delete键）识别成x命令的功能，通常不识别退格键（Backspace键）




    插入模式    
        1、进入普通模式 
            ESC 


    命令行模式
        :q                          如果未修改缓冲区数据，退出
        :q                          取消所有对缓冲区数据的修改并退出
        :w filename                 将文件保存到另一个文件中
        :wq                         将缓冲区数据保存到文件中并退出
        :wq!                        强制保存退出
        :q!                         强制退出
        :set nu                     显示行号
        :set nonu                   不显示行号
        :nohl                       不高亮显示
        :x                          保存退出(编辑保存与wq完全相同；打开不编辑保存，wq会修改ModifyTime，x不更改)


#、移动光标
    h:                              左移一个字符
    j:                              下移一个字符
    k:                              上移一个字符
    l:                              右移一个字符
    Ctrl+F（PageDown）:             下翻一屏
    Ctrl+B（PageUp）:               上翻一屏
    G:                              移到缓冲区最后一行
    num G:                          移到缓冲区第num行
    gg:                             移到缓冲区第一行
    w                               将光标向右移一个字
    b                               将光标向左移一个字
    e                               将光标移到字尾
    0                               将光标移到当前行的行首
    [Return]                        将光标移到下一行的行首
    [Spacebar]                      将光标向右移动一位
    [Backspace]                     将光标向左移动一位



Ctrl + s        // vim停止向终端输出(无法键入)
退出这种状态，按下Ctrl + q


#、复制和粘贴
    vim编辑器在删除数据时，实际上会将数据保存在单独的一个寄存器中，可以用p命令取回。

    例如，可以用dd命令删除一行文本，然后把光标移动到缓冲区的某个要放置该文本的地方，然后用p命令，该命令会将文本插入到当前光标所在行之后。
    vim编辑器中复制命令是y（代表yank），可以在y命令后面使用和d命令相同的第二字符（如:yw代表复制一个单词，y$代表复制到行尾）。
    在复制文本后，把光标移动到想放置文本的地方，键入p命令，复制的文本就会出现在该位置。
    复制命令一般在可视模式下使用。可视模式会在移动光标的同时高亮显示文本，键入v键可进入可视模式，如下图所示。
    在这里插入图片描述
    可先在可视模式下覆盖要复制的文本，然后键入y命令来激活复制命令，之后移动光标到要放置文本的位置，使用p命令将寄存器中的文本粘贴下来。

    全部删除：按esc键后，先按gg（到达顶部），然后dG
    全部复制：按esc键后，先按gg，然后ggyG
    全选高亮显示：按esc键后，先按gg，然后ggvG或者ggVG

    单行复制：按esc键后, 然后yy
    单行删除：按esc键后, 然后dd
    粘贴：按esc键后, 然后p
    复制到粘贴板: 全选高亮显示之后，ctrl+shift+c，

    vim只能粘贴50行的问题：
    在当前用户主目录编辑~/.vimrc（如果不存在，新建这个文件），添加一行

    :set viminfo='1000,<500

    至于为什么要输入输入’1000,这个其实不重要，最主要的是输入<500,它是设置寄存器保存的行数的。即最大值为 500


#、查找和替换

vim编辑器在普通模式下，可使用/（斜线键）来查找文本。按下/后，光标会跑到消息行，然后vim会显示出斜线。输入要查找的文本，按下回车键便可完成查找。vim编辑器会采用以下三种回应中的一种:

    如果要查找的文本出现在光标位置之后，则光标会跳到该文本出现的第一个位置。
    如果要查找的文本未在光标当前位置之后出现，则光标会绕过文件末尾，出现在该文本所在的第一个位置（并用一条消息指明）。
    输出一条错误消息，说明在文件中没有找到要查找的文本。

    要继续查找同一个文本，可键入/（斜线键），然后键入回车键。或者键入n命令，表示下一个（next）。
    vim编辑器在命令行模式下可使用替换命令。替换命令的格式是::s/old/new/。vim编辑器会跳到old第一次出现的地方，并用new来替换。还可用以下命令来替换多处文本:

    :s/old/new/g                替换一行中的所有old
    :n,ms:/old/new/g            替换行号n和m之间的所有old
    :%s/old/new/g               替换整个文件中的所有old
    :%s/old/new/gc              替换整个文件中的所有old，但在每次出现时提示，询问是否要替换
    

#、翻页
    [Ctrl-d]                    将光标向下移到文件尾，通常每次移动12行
    [Ctrl-u]                    将光标向上移到文件头，通常每次移动12行
    [Ctrl-f]                    将光标向下移到文件尾，通常每次移动24行
    [Ctrl-b]                    将光标向上移到文件头，通常每次移动24行


撤销：u

恢复撤销：Ctrl + r


