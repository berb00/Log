#、note
    Docker的核心组件：
        Docker Client       用户界面，它支持用户与Docker Daemon之间通信。
        Docker daemon       运行于主机上，处理服务请求  daemon 实现了 Docker 引擎的 API。

        Docker Registry

        Docker Image        是一个只读模板，用来运行Docker容器。
        Docker Container    负责应用程序的运行，包括操作系统、用户添加的文件以及元数据。
        DockerFile          是文件指令集，用来说明如何自动创建Docker镜像。

        Docker Index是中央registry，支持拥有公有与私有访问权限的Docker容器镜像的备份。


#、docker安装(centos7以上)
    #、卸载旧版本docker
        yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine
    #、需要的安装包
        yum install -y yum-utils
    #、设置仓库镜像
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo   # 默认国外地址
    #、更新yum软件包索引
        yum makecache fast
    #、安装docker引擎   // ce:社区版 ee:企业版
        yum install docker-ce docker-ce-cli containerd.io

#、docker卸载
    #、卸载依赖
        yum remove docker-ce docker-ce-cli containerd.io
    #、删除资源
        rm -rf /var/lib/docker


#、修改docker仓库资源镜像路径
    1.编辑docker配置文件
        sudo vim /etc/default/docker
        底部加入:DOCKER_OPTS="--registry-mirror=https://registry.docker-cn.com"
    2.重启docker
        sudo service docker restart


#、command
    查看docker版本信息
        docker version
        docker info

    启动Docker-CE
        systemctl enable docker
        systemctl start docker
        service docker start

    重启 Docker daemon
        systemctl daemon-reload
        systemctl restart docker.service

    查看存在的镜像
        docker images
        docker image ls
    查看容器
    docker ps    // 运行的容器
    docker ps -a    // 所有的容器
    docker container ls
    docker container ls --all
    启动容器
        docker start container_name/container_id
        docker container start [containerID]
    重启容器
        docker restart container_name/container_id
    停止容器
        docker stop container_name/container_id
        bash container stop [containerID]
    进入容器
        docker attach container_name/container_id
    删除容器
        docker rm container_name/container_id
    删除镜像    
        docker rmi image_name           // 需先删除镜像容器

    从 Docker Hub拉取docker镜像:
    docker pull image_name  // 拉取最新版
    docker pull image_name:image_id     // 拉取指定版本

    运行镜像
    docker container run image_name

    终止容器
    docker container kill [containID]

    查看容器输出
    docker container logs [containerID]


    // 添加docker-ce 源
    wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo

    // 修改docker-ce 源
    sed -i 's@download.docker.com@mirrors.tuna.tsinghua.edu.cn/docker-ce@g' /etc/yum.repos.d/docker-ce.repo

    // 更新并安装 Docker-CE
    yum makecache fast
    yum -y install docker-ce

    // 查看docker版本
    yum list docker-ce.x86_64 --showduplicates | sort -r

    // 下载指定版本
    yum -y install docker-ce-17.03.2.ce                     


#、Error
    # docker image ls
    # Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
    解决:
    # systemctl daemon-reload 
    # systemctl restart docker


#、Docker 如何运行一个容器？
    Docker 引擎创建容器映像
    将容器映像传递给 containerd
    containerd 调用 containerd-shim
    containerd-shim 使用 runC 来运行容器
    containerd-shim 允许运行时(本例中为 runC)在启动容器后退出
    该模型带来的最大好处是在升级 docker 引擎时不会中断容器的运行。



#、构建image方式
    1、commit方式
    2、Dockerfile方式


































































