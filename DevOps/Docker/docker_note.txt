#、note
    Docker的核心组件：
        Docker Client       用户界面，它支持用户与Docker Daemon之间通信。
        Docker daemon       运行于主机上，处理服务请求  daemon 实现了 Docker 引擎的 API。

        Docker Registry

        Docker Image        是一个只读模板，用来运行Docker容器。
        Docker Container    负责应用程序的运行，包括操作系统、用户添加的文件以及元数据。
        DockerFile          是文件指令集，用来说明如何自动创建Docker镜像。

        Docker Index是中央registry，支持拥有公有与私有访问权限的Docker容器镜像的备份。


#、docker安装(centos7以上)
    #、卸载旧版本docker
        yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine
    #、需要的安装包
        yum install -y yum-utils
    #、设置仓库镜像
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo   # 默认国外地址
    #、更新yum软件包索引
        yum makecache fast
    #、安装docker引擎   // ce:社区版 ee:企业版
        yum install docker-ce docker-ce-cli containerd.io

#、docker卸载
    #、卸载依赖
        yum remove docker-ce docker-ce-cli containerd.io
    #、删除资源
        rm -rf /var/lib/docker


#、修改docker仓库资源镜像路径
    1.编辑docker配置文件
        sudo vim /etc/default/docker
        底部加入:DOCKER_OPTS="--registry-mirror=https://registry.docker-cn.com"
    2.重启docker
        sudo service docker restart


#、Error
    # docker image ls
    # Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
    解决:
    # systemctl daemon-reload 
    # systemctl restart docker


#、Docker 如何运行一个容器？
    Docker 引擎创建容器映像
    将容器映像传递给 containerd
    containerd 调用 containerd-shim
    containerd-shim 使用 runC 来运行容器
    containerd-shim 允许运行时(本例中为 runC)在启动容器后退出
    该模型带来的最大好处是在升级 docker 引擎时不会中断容器的运行。



#、构建image方式
    1、commit方式
    2、Dockerfile方式


































































