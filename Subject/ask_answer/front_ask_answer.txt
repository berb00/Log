#你如何对网站的文件和资源进行优化？
	1、文件合并（减少http请求）：
        Web性能优化最佳实践中最重要的一条是减少HTTP 请求，它也是YSlow中比重最大的一条规则。
        减少HTTP请求的方案主要有合并JavaScript和CSS文件、CSS Sprites、图像映射 （Image Map）和使用Data URI来编码图片。
        CSS Sprites和图像映射现在已经随处可见了，但由于IE6和IE7不支持Data URI以及性能问题，这项技术尚未大量使用。
        目前大部分网页中的JavaScript和CSS文件数量和开发时一致，少量的网页会根据实际情况采取本地合并，
        这些合并中相当多的是有选择地手动完成，每次新的合并都需要重新在本地完成并上传到服务器，比较的随意和繁琐，同样文件的压缩也有类似的情况。
        而利用 服务端的合并和压缩，我们就可以按照开发的逻辑尽可能让文件的颗粒度变小，利用网页中URL的规则来自动实现文件的合并和压缩，
        这会相当的灵活和高效。参照http://www.iamued.com/qianduan/1462.html

    2、文件压缩：目的是直接减少文件下载的体积；常用的工具是YUI Compressor。参考http://www.cnblogs.com/Darren_code/archive/2011/12/31/property.html

    3、 使用 CDN （内容分发网络）来托管资源；降低通信距离
    "其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。
    通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，
    CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。"
    形象点说：古代打仗大家一定都知道，由于古代的交通很不发达，所以当外族进攻的时候往往不能及时的反击，等朝廷征完兵再把兵派往边境的时候那些侵略者却是早已不见了踪影，
    这个让古代的帝王很是郁闷。后来帝王们学聪明了，都将大量的兵员提前派往边境驻扎，让他们平时屯田，战时当兵，这样的策略起到了很显著的作用。

    4、缓存的使用（并且多个域名来提供缓存）添加Expire/Cache-Control头。

    5、GZIP 压缩你的 JS 和 CSS 文件：参照http://www.admin5.com/article/20140118/535246.shtml
    1. 确保网站信息描述全站统一
    2. 清楚网站内部无效重复的信息
    3. 让用户能迅速准确的在网站查看相关内容
    4. 优化内部结构便于搜索引擎的理解和收录
    5.将css放在页面最上面。
    6.将script放在页面最下面。
    7.避免在css中使用表达式。
    8.将css, js都放在外部文件中。
    9.减少DNS查询。
    10.文件压缩：最小化css, js，减小文件体积。
    11.避免重定向。
    12.移除重复脚本。
    13.配置实体标签ETag。
    14.使用AJAX缓存，让网站内容分批加载，局部更新。


#src和href的区别?
	href(Hypertext Reference)超文本引用
		建立当前元素和文档之间的链接
	src(source)资源                                 (建立建立当前文件与引用资源间联系)
		src指向的内容会嵌入到文档中当前标签所在的位置。   (替换当前元素)