-ms-transform:rotate(7deg);            //-ms代表ie内核识别码
-moz-transform:rotate(7deg);           //-moz代表火狐内核识别码
-webkit-transform:rotate(7deg);        //-webkit代表谷歌内核识别码
-o-transform:rotate(7deg);             //-o代表欧朋【opera】内核识别码



-webkit-
-ms-
-mos-



后代选取器(以空格分隔)
子元素选择器(以大于号分隔）
相邻兄弟选择器（以加号分隔）
普通兄弟选择器（以破折号分隔）

伪类Pseudo-classes：
selector:pseudo-class {property:value;}
selector.class:pseudo-class {property:value;}
:link
:visited
:hover
:active
:lang(language)
匹配第一个<p>元素p:first-child
匹配所有<p>元素中的第一个<i>元素p > i:first-child
匹配所有作为第一个子元素的<p>元素中的所有<i>元素p:first-child i

伪元素：
伪元素的语法：
selector:pseudo-element {property:value;}
CSS类也可以使用伪元素：
selector.class:pseudo-element {property:value;}
伪类选择元素基于的是当前元素处于的状态，或者说元素当前所具有的特性，而不是元素的id、class、属性等静态的标志。
由于状态是动态变化的，所以一个元素达到一个特定状态时，它可能得到一个伪类的样式；当状态改变时，它又会失去这个样式。
由此可以看出，它的功能和class有些类似，但它是基于文档之外的抽象，所以叫伪类。

与伪类针对特殊状态的元素不同的是，伪元素是对元素中的特定内容进行操作，它所操作的层次比伪类更深了一层，也因此它的动态性比伪类要低得多。
实际上，设计伪元素的目的就是去选取诸如元素内容第一个字（母）、第一行，选取某些内容前面或后面这种普通的选择器无法完成的工作。
它控制的内容实际上和元素是相同的，但是它本身只是基于元素的抽象，并不存在于文档中，所以叫伪元素。







cursor:no-drop       //是一个红色的圈加一个斜杠，表示禁止的意思
cursor:not-allowed   //是一个红色的圈加一个斜杠，表示禁止的意思





























