
#Official documents
#################################################################
    Array
        _.chunk
        _.compact
        _.concat
        _.difference
        _.differenceBy
        _.differenceWith
        _.drop
        _.dropRight
        _.dropRightWhile
        _.dropWhile
        _.fill
        _.findIndex
        _.findLastIndex
        _.first -> head
        _.flatten
        _.flattenDeep
        _.flattenDepth
        _.fromPairs
        _.head
        _.indexOf
        _.initial
        _.intersection
        _.intersectionBy
        _.intersectionWith
        _.join
        _.last
        _.lastIndexOf
        _.nth
        _.pull
        _.pullAll
        _.pullAllBy
        _.pullAllWith
        _.pullAt
        _.remove
        _.reverse
        _.slice
        _.sortedIndex
        _.sortedIndexBy
        _.sortedIndexOf
        _.sortedLastIndex
        _.sortedLastIndexBy
        _.sortedLastIndexOf
        _.sortedUniq
        _.sortedUniqBy
        _.tail
        _.take
        _.takeRight
        _.takeRightWhile
        _.takeWhile
        _.union
        _.unionBy
        _.unionWith
        _.uniq
        _.uniqBy
        _.uniqWith
        _.unzip
        _.unzipWith
        _.without
        _.xor
        _.xorBy
        _.xorWith
        _.zip
        _.zipObject
        _.zipObjectDeep
        _.zipWith


    Collection
        _.countBy
        _.each -> forEach
        _.eachRight -> forEachRight
        _.every
        _.filter
        _.find
        _.findLast
        _.flatMap
        _.flatMapDeep
        _.flatMapDepth
        _.forEach
        _.forEachRight
        _.groupBy
        _.includes
        _.invokeMap
        _.keyBy
        _.map
        _.orderBy
        _.partition
        _.reduce
        _.reduceRight
        _.reject
        _.sample
        _.sampleSize
        _.shuffle
        _.size
        _.some
        _.sortBy


    Date
        _.now

    Function
        _.after
        _.ary
        _.before
        _.bind
        _.bindKey
        _.curry
        _.curryRight
        _.debounce
        _.defer
        _.delay
        _.flip
        _.memoize
        _.negate
        _.once
        _.overArgs
        _.partial
        _.partialRight
        _.rearg
        _.rest
        _.spread
        _.throttle
        _.unary
        _.wrap


    Lang
        _.castArray
        _.clone
        _.cloneDeep
        _.cloneDeepWith
        _.cloneWith
        _.conformsTo
        _.eq
        _.gt
        _.gte
        _.isArguments
        _.isArray
        _.isArrayBuffer
        _.isArrayLike
        _.isArrayLikeObject
        _.isBoolean
        _.isBuffer
        _.isDate
        _.isElement
        _.isEmpty
        _.isEqual
        _.isEqualWith
        _.isError
        _.isFinite
        _.isFunction
        _.isInteger
        _.isLength
        _.isMap
        _.isMatch
        _.isMatchWith
        _.isNaN
        _.isNative
        _.isNil
        _.isNull
        _.isNumber
        _.isObject
        _.isObjectLike
        _.isPlainObject
        _.isRegExp
        _.isSafeInteger
        _.isSet
        _.isString
        _.isSymbol
        _.isTypedArray
        _.isUndefined
        _.isWeakMap
        _.isWeakSet
        _.lt
        _.lte
        _.toArray
        _.toFinite
        _.toInteger
        _.toLength
        _.toNumber
        _.toPlainObject
        _.toSafeInteger
        _.toString


    Math
        _.add
        _.ceil
        _.divide
        _.floor
        _.max
        _.maxBy
        _.mean
        _.meanBy
        _.min
        _.minBy
        _.multiply
        _.round
        _.subtract
        _.sum
        _.sumBy


    Number
        _.clamp
        _.inRange
        _.random


    Object
        _.assign
        _.assignIn
        _.assignInWith
        _.assignWith
        _.at
        _.create
        _.defaults
        _.defaultsDeep
        _.entries -> toPairs
        _.entriesIn -> toPairsIn
        _.extend -> assignIn
        _.extendWith -> assignInWith
        _.findKey
        _.findLastKey
        _.forIn
        _.forInRight
        _.forOwn
        _.forOwnRight
        _.functions
        _.functionsIn
        _.get
        _.has
        _.hasIn
        _.invert
        _.invertBy
        _.invoke
        _.keys
        _.keysIn
        _.mapKeys
        _.mapValues
        _.merge
        _.mergeWith
        _.omit
        _.omitBy
        _.pick
        _.pickBy
        _.result
        _.set
        _.setWith
        _.toPairs
        _.toPairsIn
        _.transform
        _.unset
        _.update
        _.updateWith
        _.values
        _.valuesIn


    Seq
        _
        _.chain
        _.tap
        _.thru
        _.prototype[Symbol.iterator]
        _.prototype.at
        _.prototype.chain
        _.prototype.commit
        _.prototype.next
        _.prototype.plant
        _.prototype.reverse
        _.prototype.toJSON -> value
        _.prototype.value
        _.prototype.valueOf -> value


    String
        _.camelCase
        _.capitalize
        _.deburr
        _.endsWith
        _.escape
        _.escapeRegExp
        _.kebabCase
        _.lowerCase
        _.lowerFirst
        _.pad
        _.padEnd
        _.padStart
        _.parseInt
        _.repeat
        _.replace
        _.snakeCase
        _.split
        _.startCase
        _.startsWith
        _.template
        _.toLower
        _.toUpper
        _.trim
        _.trimEnd
        _.trimStart
        _.truncate
        _.unescape
        _.upperCase
        _.upperFirst
        _.words

    Util
        _.attempt
        _.bindAll
        _.cond
        _.conforms
        _.constant
        _.defaultTo
        _.flow
        _.flowRight
        _.identity
        _.iteratee
        _.matches
        _.matchesProperty
        _.method
        _.methodOf
        _.mixin
        _.noConflict
        _.noop
        _.nthArg
        _.over
        _.overEvery
        _.overSome
        _.property
        _.propertyOf
        _.range
        _.rangeRight
        _.runInContext
        _.stubArray
        _.stubFalse
        _.stubObject
        _.stubString
        _.stubTrue
        _.times
        _.toPath
        _.uniqueId


    Properties
        _.VERSION
        _.templateSettings
        _.templateSettings.escape
        _.templateSettings.evaluate
        _.templateSettings.imports
        _.templateSettings.interpolate
        _.templateSettings.variable


    Methods
        _.templateSettings.imports._



#lodash.core
#####################################################################
assignIn: [Function],      
    before: [Function: before],
    bind: [Function],
    chain: [Function: chain],  
    compact: [Function: compact],
    concat: [Function: concat],
    create: [Function: create],
    defaults: [Function],
    defer: [Function],
    delay: [Function],
    filter: [Function: filter],
    flatten: [Function: flatten],
    flattenDeep: [Function: flattenDeep],
    iteratee: [Function: baseIteratee],
    keys: [Function],
    map: [Function: map],
    matches: [Function: matches],
    mixin: [Function: mixin],
    negate: [Function: negate],
    once: [Function: once],
    pick: [Function],
    slice: [Function: slice],
    sortBy: [Function: sortBy],
    tap: [Function: tap],
    thru: [Function: thru],
    toArray: [Function: toArray],
    values: [Function: values],
    extend: [Function],
    clone: [Function: clone],
    escape: [Function: escape],
    every: [Function: every],
    find: [Function],
    forEach: [Function: forEach],
    has: [Function: has],
    head: [Function: head],
    identity: [Function: identity],
    indexOf: [Function: indexOf],
    isArguments: [Function],
    isArray: [Function: isArray],
    isBoolean: [Function: isBoolean],
    isDate: [Function: baseIsDate],
    isEmpty: [Function: isEmpty],
    isEqual: [Function: isEqual],
    isFinite: [Function: isFinite],
    isFunction: [Function: isFunction],
    isNaN: [Function: isNaN],
    isNull: [Function: isNull],
    isNumber: [Function: isNumber],
    isObject: [Function: isObject],
    isRegExp: [Function: baseIsRegExp],
    isString: [Function: isString],
    isUndefined: [Function: isUndefined],
    last: [Function: last],
    max: [Function: max],
    min: [Function: min],
    noConflict: [Function: noConflict],
    noop: [Function: noop],
    reduce: [Function: reduce],
    result: [Function: result],
    size: [Function: size],
    some: [Function: some],
    uniqueId: [Function: uniqueId],
    each: [Function: forEach],
    first: [Function: head],
    VERSION: '4.17.11',
    _: [Circular] }



#lodash
#####################################################################
    { [Function: lodash]
    templateSettings:
    { escape: /<%-([\s\S]+?)%>/g,     
        evaluate: /<%([\s\S]+?)%>/g,    
        interpolate: /<%=([\s\S]+?)%>/g,
        variable: '',
        imports: { _: [Circular] } },   
    after: [Function: after],
    ary: [Function: ary],
    assign: [Function],
    assignIn: [Function],
    assignInWith: [Function],
    assignWith: [Function],
    at: [Function],
    before: [Function: before],        
    bind: { [Function] placeholder: [Circular] },
    bindAll: [Function],
    bindKey: { [Function] placeholder: [Circular] },
    castArray: [Function: castArray],
    chain: [Function: chain],
    chunk: [Function: chunk],
    compact: [Function: compact],
    concat: [Function: concat],
    cond: [Function: cond],
    conforms: [Function: conforms],
    constant: [Function: constant],
    countBy: [Function],
    create: [Function: create],
    curry: { [Function: curry] placeholder: [Circular] },
    curryRight: { [Function: curryRight] placeholder: [Circular] },
    debounce: [Function: debounce],
    defaults: [Function],
    defaultsDeep: [Function],
    defer: [Function],
    delay: [Function],
    difference: [Function],
    differenceBy: [Function],
    differenceWith: [Function],
    drop: [Function: drop],
    dropRight: [Function: dropRight],
    dropRightWhile: [Function: dropRightWhile],
    dropWhile: [Function: dropWhile],
    fill: [Function: fill],
    filter: [Function: filter],
    flatMap: [Function: flatMap],
    flatMapDeep: [Function: flatMapDeep],
    flatMapDepth: [Function: flatMapDepth],
    flatten: [Function: flatten],
    flattenDeep: [Function: flattenDeep],
    flattenDepth: [Function: flattenDepth],
    flip: [Function: flip],
    flow: [Function],
    flowRight: [Function],
    fromPairs: [Function: fromPairs],
    functions: [Function: functions],
    functionsIn: [Function: functionsIn],
    groupBy: [Function],
    initial: [Function: initial],
    intersection: [Function],
    intersectionBy: [Function],
    intersectionWith: [Function],
    invert: [Function],
    invertBy: [Function],
    invokeMap: [Function],
    iteratee: [Function: iteratee],
    keyBy: [Function],
    keys: [Function: keys],
    keysIn: [Function: keysIn],
    map: [Function: map],
    mapKeys: [Function: mapKeys],
    mapValues: [Function: mapValues],
    matches: [Function: matches],
    matchesProperty: [Function: matchesProperty],
    memoize: { [Function: memoize] Cache: [Function: MapCache] },
    merge: [Function],
    mergeWith: [Function],
    method: [Function],
    methodOf: [Function],
    mixin: [Function: mixin],
    negate: [Function: negate],
    nthArg: [Function: nthArg],
    omit: [Function],
    omitBy: [Function: omitBy],
    once: [Function: once],
    orderBy: [Function: orderBy],
    over: [Function],
    overArgs: [Function],
    overEvery: [Function],
    overSome: [Function],
    partial: { [Function] placeholder: [Circular] },
    partialRight: { [Function] placeholder: [Circular] },
    partition: [Function],
    pick: [Function],
    pickBy: [Function: pickBy],
    property: [Function: property],
    propertyOf: [Function: propertyOf],
    pull: [Function],
    pullAll: [Function: pullAll],
    pullAllBy: [Function: pullAllBy],
    pullAllWith: [Function: pullAllWith],
    pullAt: [Function],
    range: [Function],
    rangeRight: [Function],
    rearg: [Function],
    reject: [Function: reject],
    remove: [Function: remove],
    rest: [Function: rest],
    reverse: [Function: reverse],
    sampleSize: [Function: sampleSize],
    set: [Function: set],
    setWith: [Function: setWith],
    shuffle: [Function: shuffle],
    slice: [Function: slice],
    sortBy: [Function],
    sortedUniq: [Function: sortedUniq],
    sortedUniqBy: [Function: sortedUniqBy],
    split: [Function: split],
    spread: [Function: spread],
    tail: [Function: tail],
    take: [Function: take],
    takeRight: [Function: takeRight],
    takeRightWhile: [Function: takeRightWhile],
    takeWhile: [Function: takeWhile],
    tap: [Function: tap],
    throttle: [Function: throttle],
    thru: [Function: thru],
    toArray: [Function: toArray],
    toPairs: [Function],
    toPairsIn: [Function],
    toPath: [Function: toPath],
    toPlainObject: [Function: toPlainObject],
    transform: [Function: transform],
    unary: [Function: unary],
    union: [Function],
    unionBy: [Function],
    unionWith: [Function],
    uniq: [Function: uniq],
    uniqBy: [Function: uniqBy],
    uniqWith: [Function: uniqWith],
    unset: [Function: unset],
    unzip: [Function: unzip],
    unzipWith: [Function: unzipWith],
    update: [Function: update],
    updateWith: [Function: updateWith],
    values: [Function: values],
    valuesIn: [Function: valuesIn],
    without: [Function],
    words: [Function: words],
    wrap: [Function: wrap],
    xor: [Function],
    xorBy: [Function],
    xorWith: [Function],
    zip: [Function],
    zipObject: [Function: zipObject],
    zipObjectDeep: [Function: zipObjectDeep],
    zipWith: [Function],
    entries: [Function],
    entriesIn: [Function],
    extend: [Function],
    extendWith: [Function],
    add: [Function],
    attempt: [Function],
    camelCase: [Function],
    capitalize: [Function: capitalize],
    ceil: [Function],
    clamp: [Function: clamp],
    clone: [Function: clone],
    cloneDeep: [Function: cloneDeep],
    cloneDeepWith: [Function: cloneDeepWith],
    cloneWith: [Function: cloneWith],
    conformsTo: [Function: conformsTo],
    deburr: [Function: deburr],
    defaultTo: [Function: defaultTo],
    divide: [Function],
    endsWith: [Function: endsWith],
    eq: [Function: eq],
    escape: [Function: escape],
    escapeRegExp: [Function: escapeRegExp],
    every: [Function: every],
    find: [Function],
    findIndex: [Function: findIndex],
    findKey: [Function: findKey],
    findLast: [Function],
    findLastIndex: [Function: findLastIndex],
    findLastKey: [Function: findLastKey],
    floor: [Function],
    forEach: [Function: forEach],
    forEachRight: [Function: forEachRight],
    forIn: [Function: forIn],
    forInRight: [Function: forInRight],
    forOwn: [Function: forOwn],
    forOwnRight: [Function: forOwnRight],
    get: [Function: get],
    gt: [Function],
    gte: [Function],
    has: [Function: has],
    hasIn: [Function: hasIn],
    head: [Function: head],
    identity: [Function: identity],
    includes: [Function: includes],
    indexOf: [Function: indexOf],
    inRange: [Function: inRange],
    invoke: [Function],
    isArguments: [Function: baseIsArguments],
    isArray: [Function: isArray],
    isArrayBuffer: [Function],
    isArrayLike: [Function: isArrayLike],
    isArrayLikeObject: [Function: isArrayLikeObject],
    isBoolean: [Function: isBoolean],
    isBuffer: [Function: isBuffer],
    isDate: [Function],
    isElement: [Function: isElement],
    isEmpty: [Function: isEmpty],
    isEqual: [Function: isEqual],
    isEqualWith: [Function: isEqualWith],
    isError: [Function: isError],
    isFinite: [Function: isFinite],
    isFunction: [Function: isFunction],
    isInteger: [Function: isInteger],
    isLength: [Function: isLength],
    isMap: [Function],
    isMatch: [Function: isMatch],
    isMatchWith: [Function: isMatchWith],
    isNaN: [Function: isNaN],
    isNative: [Function: isNative],
    isNil: [Function: isNil],
    isNull: [Function: isNull],
    isNumber: [Function: isNumber],
    isObject: [Function: isObject],
    isObjectLike: [Function: isObjectLike],
    isPlainObject: [Function: isPlainObject],
    isRegExp: [Function],
    isSafeInteger: [Function: isSafeInteger],
    isSet: [Function],
    isString: [Function: isString],
    isSymbol: [Function: isSymbol],
    isTypedArray: [Function],
    isUndefined: [Function: isUndefined],
    isWeakMap: [Function: isWeakMap],
    isWeakSet: [Function: isWeakSet],
    join: [Function: join],
    kebabCase: [Function],
    last: [Function: last],
    lastIndexOf: [Function: lastIndexOf],
    lowerCase: [Function],
    lowerFirst: [Function],
    lt: [Function],
    lte: [Function],
    max: [Function: max],
    maxBy: [Function: maxBy],
    mean: [Function: mean],
    meanBy: [Function: meanBy],
    min: [Function: min],
    minBy: [Function: minBy],
    stubArray: [Function: stubArray],
    stubFalse: [Function: stubFalse],
    stubObject: [Function: stubObject],
    stubString: [Function: stubString],
    stubTrue: [Function: stubTrue],
    multiply: [Function],
    nth: [Function: nth],
    noConflict: [Function: noConflict],
    noop: [Function: noop],
    now: [Function],
    pad: [Function: pad],
    padEnd: [Function: padEnd],
    padStart: [Function: padStart],
    parseInt: [Function: parseInt],
    random: [Function: random],
    reduce: [Function: reduce],
    reduceRight: [Function: reduceRight],
    repeat: [Function: repeat],
    replace: [Function: replace],
    result: [Function: result],
    round: [Function],
    runInContext: [Function: runInContext],
    sample: [Function: sample],
    size: [Function: size],
    snakeCase: [Function],
    some: [Function: some],
    sortedIndex: [Function: sortedIndex],
    sortedIndexBy: [Function: sortedIndexBy],
    sortedIndexOf: [Function: sortedIndexOf],
    sortedLastIndex: [Function: sortedLastIndex],
    sortedLastIndexBy: [Function: sortedLastIndexBy],
    sortedLastIndexOf: [Function: sortedLastIndexOf],
    startCase: [Function],
    startsWith: [Function: startsWith],
    subtract: [Function],
    sum: [Function: sum],
    sumBy: [Function: sumBy],
    template: [Function: template],
    times: [Function: times],
    toFinite: [Function: toFinite],
    toInteger: [Function: toInteger],
    toLength: [Function: toLength],
    toLower: [Function: toLower],
    toNumber: [Function: toNumber],
    toSafeInteger: [Function: toSafeInteger],
    toString: [Function: toString],
    toUpper: [Function: toUpper],
    trim: [Function: trim],
    trimEnd: [Function: trimEnd],
    trimStart: [Function: trimStart],
    truncate: [Function: truncate],
    unescape: [Function: unescape],
    uniqueId: [Function: uniqueId],
    upperCase: [Function],
    upperFirst: [Function],
    each: [Function: forEach],
    eachRight: [Function: forEachRight],
    first: [Function: head],
    VERSION: '4.17.11',
    _: [Circular] }